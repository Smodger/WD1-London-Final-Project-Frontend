{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/comments.js","js/models/comments.js","js/directives/googleMap.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js","js/models/vineyards.js","js/controllers/vineyards.js","js/controllers/vineyardsNew.js","js/controllers/vineyardsShow.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","submit","signup","register","user","then","go","this","LoginController","login","credentials","CommentsIndexController","Comment","commentsIndex","all","query","CommentsShowController","deleteComment","commentsShow","comment","$remove","get","params","delete","isLoggedIn","isAuthenticated","CommentsEditController","update","commentsEdit","$update","$resource","id","method","googleMap","$window","restrict","replace","template","scope","center","link","$scope","element","map","google","maps","Map","zoom","disableDefaultUI","zoomControl","scaleControl","scrollwheel","Marker","position","animation","Animation","DROP","MainController","$rootScope","logout","secureState","e","toState","main","message","protectedStates","includes","name","preventDefault","userId","getPayload","$on","Router","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","UsersIndexController","User","usersIndex","UsersShowController","isCurrentUser","parseFloat","deleteUser","usersShow","UsersEditController","usersEdit","Vineyard","VineyardsController","vineyards","console","log","VineyardsNewController","createVineyard","vineyardsNew","vineyard","save","currentUser","VineyardsEditController","vineyardsEdit","VineyardsShowController","addComment","vineyardsShow","data","comments","push","reload","deleteVineyard","vineyard_id","angular","module","constant","config","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state'];\nfunction RegisterController($auth, $state) {\n  const register = this;\n\n  register.user = {};\n\n  function submit() {\n    $auth.signup(register.user)\n      .then(() => {\n        $state.go('login');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('usersIndex');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('CommentsIndexController', CommentsIndexController)\n  .controller('CommentsShowController', CommentsShowController)\n  .controller('CommentsEditController', CommentsEditController);\n\nCommentsIndexController.$inject = ['Comment'];\nfunction CommentsIndexController(Comment) {\n  const commentsIndex = this;\n\n  commentsIndex.all = Comment.query();\n}\n\n\nCommentsShowController.$inject = ['Comment', '$state', '$auth'];\nfunction CommentsShowController(Comment, $state, $auth){\n  const commentsShow = this;\n\n  commentsShow.comment = Comment.get($state.params);\n\n  function deleteComment() {\n    commentsShow.comment.$remove(() => {\n      $state.go('commentsIndex');\n    });\n  }\n  commentsShow.delete = deleteComment;\n  commentsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n\n\nCommentsEditController.$inject = ['Comment', '$state'];\nfunction CommentsEditController(Comment, $state) {\n  const commentsEdit = this;\n\n  commentsEdit.comment = Comment.get($state.params);\n\n  function update() {\n    commentsEdit.comment.$update(() => {\n      $state.go('commentsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('Comment', Comment);\n\nComment.$inject = ['$resource', 'API_URL'];\nfunction Comment($resource, API_URL) {\n  return new $resource(`${API_URL}/comments/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      center: '='\n    },\n    link: function($scope, element) {\n      const map = new $window.google.maps.Map(element[0], {\n        center: $scope.center,\n        zoom: 14,\n        disableDefaultUI: true,\n        zoomControl: true,\n        scaleControl: true,\n        scrollwheel: false\n      });\n\n      new $window.google.maps.Marker({\n        position: $scope.center,\n        map: map,\n        animation: $window.google.maps.Animation.DROP\n      });\n    }\n  };\n}\n\n\n\n\n\n// googleMap.$inject = ['$window'];\n// function googleMap($window) {\n//   return {\n//     restrict: 'E',\n//     replace: true,\n//     template: '<div class=\"google-map\"></div>',\n//     scope: {\n//       center: '='\n//     },\n//     link: function($scope, element) {\n//       $scope.$watch('center', (val) =>{\n//         console.log(val);\n//         if(val && val.lat && val.lng){\n//           const map = new $window.google.maps.Map(element[0], {\n//             center: $scope.center,\n//             zoom: 14\n//           });\n//\n//           new $window.google.maps.Marker({\n//             position: $scope.center,\n//             map,\n//             animation: $window.google.maps.Animation.DROP\n//           });\n//         }\n//       });\n//     }\n//   };\n// }\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope'];\nfunction MainController($auth, $state, $rootScope){\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n  main.userId = $auth.getPayload().id;\n\n  function logout(){\n    $auth.logout()\n      .then(()=>{\n        $state.go('usersIndex');\n      });\n  }\n\n  const protectedStates = ['usersEdit'];\n// toParams gets the id from url, toState gets the name of the state\n  function secureState(e, toState){\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)){\n      e.preventDefault();\n      $state.go('login');\n      main.message= 'you must be logged in to go there';\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('vineyardsIndex', {\n      url: '/vineyards',\n      templateUrl: '/templates/vineyards.html',\n      controller: 'VineyardsController as vineyards'\n    })\n    .state('vineyardsNew', {\n      url: '/vineyards/new',\n      templateUrl: '/templates/vineyardsNew.html',\n      controller: 'VineyardsNewController as vineyardsNew'\n    })\n    .state('vineyardsShow', {\n      url: '/vineyards/:id',\n      templateUrl: '/templates/vineyardsShow.html',\n      controller: 'VineyardsShowController as vineyardsShow'\n    })\n    .state('vineyardsEdit', {\n      url: '/vineyards/:id/edit',\n      templateUrl: '/templates/vineyardsEdit.html',\n      controller: 'VineyardsEditController as vineyardsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LoginController as login'\n    })\n    // .state('commentsNew', {\n    //   url: '/comments/new',\n    //   templateUrl: '/templates/commentsNew.html',\n    //   controller: 'VineyardsShowController as vineyardsShow'\n    // })\n    ;\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\n//usersshow\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth){\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n   // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n//user edit and update\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .factory('Vineyard', Vineyard);\n\nVineyard.$inject = ['$resource', 'API_URL'];\nfunction Vineyard($resource, API_URL) {\n  return new $resource(`${API_URL}/vineyards/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('VineyardsController', VineyardsController);\n\nVineyardsController.$inject = ['Vineyard'];\n\nfunction VineyardsController(Vineyard) {\n  const vineyards = this;\n\n  vineyards.all = Vineyard.query();\n  console.log(vineyards);\n}\n","angular.module('finalProject')\n  .controller('VineyardsEditController', VineyardsEditController)\n  .controller('VineyardsNewController', VineyardsNewController);\n\nVineyardsNewController.$inject = ['Vineyard', '$state', '$auth'];\n\nfunction VineyardsNewController(Vineyard, $state, $auth) {\n\n  const vineyardsNew = this;\n  const currentUser = $auth.getPayload().id;\n  vineyardsNew.vineyard = {};\n\n  vineyardsNew.vineyard.user = currentUser;\n\n  function createVineyard() {\n\n    // get userId from payload\n    vineyardsNew.vineyard.user = $auth.getPayload().id;\n\n    Vineyard.save(vineyardsNew.vineyard, (vineyard) => {\n      $state.go('vineyardsShow', { id: vineyard.id });\n    });\n  }\n  vineyardsNew.createVineyard = createVineyard;\n}\n\n//edit\nVineyardsEditController.$inject = ['Vineyard', '$state'];\n\nfunction VineyardsEditController(vineyard, $state) {\n  const vineyardsEdit = this;\n  vineyardsEdit.vineyard = vineyard.get($state.params);\n\n  function update() {\n    vineyard.update({ id: vineyardsEdit.vineyard.id }, vineyardsEdit.vineyard, () => {\n      $state.go('vineyardsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('finalProject')\n  .controller('VineyardsShowController', VineyardsShowController);\n\nVineyardsShowController.$inject = ['Vineyard', '$state', 'Comment', '$auth'];\nfunction VineyardsShowController(Vineyard, $state, Comment, $auth){\n  const vineyardsShow = this;\n\n  vineyardsShow.vineyard = Vineyard.get($state.params);\n\n  //     // Google Map\n  // MapService\n  //   .getCoords(vineyardsShow.vineyard.postcode)\n  //   .then(res => {\n  //     vineyardsShow.center = res;\n  //   }, err => {\n  //     console.log(err);\n  //   });\n\n\n  function isCurrentUser(){\n    console.log('isCurrentUser?', $auth.getPayload().id === parseFloat($state.params.id));\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n  vineyardsShow.isCurrentUser = isCurrentUser;\n  vineyardsShow.vineyard = Vineyard.get($state.params);\n\n  vineyardsShow.comment = {\n    vineyard_id: $state.params.id\n  };\n\n  // console.log(vineyardsShow.comment);\n\n  function addComment() {\n    Comment.save(vineyardsShow.comment, (data) => {\n      console.log(data);\n      vineyardsShow.vineyard.comments.push(data);\n      $state.reload();\n    });\n  }\n\n  vineyardsShow.addComment = addComment;\n\n\n  function deleteVineyard() {\n    vineyardsShow.vineyard.$remove(() => {\n      $state.go('vineyardsIndex');\n    });\n  }\n  vineyardsShow.deleteVineyard = deleteVineyard;\n  vineyardsShow.isLoggedIn = $auth.isAuthenticated;\n\n\n\n}\n"]}