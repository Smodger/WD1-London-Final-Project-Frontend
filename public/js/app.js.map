{"version":3,"sources":["js/app.js","js/controllers/auth.js","js/controllers/comments.js","js/models/comments.js","js/directives/dragDrop.js","js/directives/googleMap.js","js/controllers/main.js","js/router.js","js/controllers/users.js","js/models/users.js","js/controllers/vineyards.js","js/models/vineyards.js","js/controllers/vineyardsNew.js","js/controllers/vineyardsShow.js"],"names":["Auth","$authProvider","API_URL","loginUrl","signupUrl","tokenPrefix","RegisterController","$auth","$state","$window","submit","signup","register","user","then","res","localStorage","setItem","data","token","go","this","LoginController","login","credentials","CommentsIndexController","Comment","commentsIndex","all","query","CommentsShowController","deleteComment","commentsShow","comment","$remove","get","params","delete","isLoggedIn","isAuthenticated","CommentsEditController","update","commentsEdit","$update","$resource","id","method","dragDrop","reader","FileReader","restrict","replace","templateUrl","scope","base64","link","$scope","element","active","message","onload","result","$apply","on","e","preventDefault","file","target","files","dataTransfer","readAsDataURL","googleMap","template","vineyard","$watch","console","log","center","google","maps","LatLng","latitude","longitude","map","Map","zoom","disableDefaultUI","zoomControl","scaleControl","scrollwheel","styles","featureType","elementType","stylers","lightness","color","visibility","weight","Marker","position","animation","Animation","DROP","MainController","$rootScope","User","logout","secureState","toState","main","protectedStates","includes","name","userId","getPayload","$on","Router","$stateProvider","$urlRouterProvider","state","url","controller","otherwise","UsersIndexController","usersIndex","UsersShowController","isCurrentUser","parseFloat","deleteUser","usersShow","UsersEditController","usersEdit","VineyardsController","Vineyard","filter","regex","RegExp","vineyards","queryString","test","region","vineyard_name","getNumber","num","Array","VineyardsNewController","createVineyard","vineyardsNew","save","currentUser","VineyardsEditController","vineyardsEdit","VineyardsShowController","vineyardsShow","addComment","comments","push","reload","deleteVineyard","forEach","user_id","vineyard_id","angular","module","constant","config","$inject","factory","directive"],"mappings":"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","file":"app.js","sourcesContent":["angular.module('finalProject', ['ngResource', 'ui.router', 'satellizer'])\n  .constant('API_URL', 'http://localhost:3000/api')\n  .config(Auth);\n\nAuth.$inject = ['$authProvider', 'API_URL'];\nfunction Auth($authProvider, API_URL) {\n  $authProvider.loginUrl = `${API_URL}/login`;\n  $authProvider.signupUrl = `${API_URL}/register`;\n\n  $authProvider.tokenPrefix = '';\n}\n","angular.module('finalProject')\n  .controller('RegisterController', RegisterController)\n  .controller('LoginController', LoginController);\n\nRegisterController.$inject = ['$auth', '$state', '$window'];\nfunction RegisterController($auth, $state, $window) {\n\n  const register = this;\n  register.user = {};\n\n  function submit() {\n\n    $auth.signup(register.user)\n      .then((res) => {\n\n        $window.localStorage.setItem('token', res.data.token);\n\n        $state.go('home');\n      });\n  }\n\n  register.submit = submit;\n}\n\nLoginController.$inject = ['$auth', '$state'];\nfunction LoginController($auth, $state) {\n  const login = this;\n\n  login.credentials = {};\n\n  function submit() {\n    $auth.login(login.credentials)\n      .then(() => {\n        $state.go('home');\n      });\n  }\n\n  login.submit = submit;\n}\n","angular.module('finalProject')\n  .controller('CommentsIndexController', CommentsIndexController)\n  .controller('CommentsShowController', CommentsShowController)\n  .controller('CommentsEditController', CommentsEditController);\n\nCommentsIndexController.$inject = ['Comment'];\nfunction CommentsIndexController(Comment) {\n  const commentsIndex = this;\n\n  commentsIndex.all = Comment.query();\n}\n\n\nCommentsShowController.$inject = ['Comment', '$state', '$auth'];\nfunction CommentsShowController(Comment, $state, $auth){\n  const commentsShow = this;\n\n  commentsShow.comment = Comment.get($state.params);\n\n  function deleteComment() {\n    commentsShow.comment.$remove(() => {\n      $state.go('commentsIndex');\n    });\n  }\n  commentsShow.delete = deleteComment;\n  commentsShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n\n\nCommentsEditController.$inject = ['Comment', '$state'];\nfunction CommentsEditController(Comment, $state) {\n  const commentsEdit = this;\n\n  commentsEdit.comment = Comment.get($state.params);\n\n  function update() {\n    commentsEdit.comment.$update(() => {\n      $state.go('commentsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('Comment', Comment);\n\nComment.$inject = ['$resource', 'API_URL'];\nfunction Comment($resource, API_URL) {\n  return new $resource(`${API_URL}/comments/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n.directive('dragDrop', dragDrop);\n\nfunction dragDrop(){\n  const reader = new FileReader();\n  return{\n    restrict: 'E',\n    replace: true,\n    templateUrl: 'templates/dragDrop.html',\n    scope: {\n      base64: '='\n    },\n    link($scope, element){\n      // console.log(element);\n\n      $scope.base64 = null;\n      $scope.active = false;\n      $scope.message = 'Drag your image here';\n////////////////////\n\n      // $scope.$watchGroup(['base64', 'src'], () => {\n      //   $scope.image = $scope.base64 || $scope.src;\n      // });\n///////////////////////////////\n      reader.onload = () => {\n        // console.log(reader.result);\n        $scope.base64 = reader.result;\n        $scope.$apply();\n      };\n\n      element\n      .on('dragover', () => {\n        $scope.active = true;\n        $scope.$apply();\n      })\n      .on('dragover', (e) =>{\n        e.preventDefault();\n        // console.log('success');\n      })\n      .on('dragleave', () => {\n        $scope.active = false;\n        $scope.$apply();\n      })\n      .on('drop', (e)=> {\n        e.preventDefault();\n        // console.log('over');\n        const file = (e.target.files || e.dataTransfer.files)[0];\n\n        reader.readAsDataURL(file); //turn into base64 url encoded\n      });\n    }\n  };\n}\n","angular.module('finalProject')\n  .directive('googleMap', googleMap);\n\ngoogleMap.$inject = ['$window'];\nfunction googleMap($window) {\n  return {\n    restrict: 'E',\n    replace: true,\n    template: '<div class=\"google-map\"></div>',\n    scope: {\n      vineyard: '='\n    },\n    link: function($scope, element) {\n      $scope.$watch('vineyard', ()=> {\n        if($scope.vineyard){\n          console.log($scope);\n          const center = new $window.google.maps.LatLng($scope.vineyard.latitude, $scope.vineyard.longitude);\n          const map = new $window.google.maps.Map(element[0], {\n            center: center,\n            zoom: 14,\n            disableDefaultUI: true,\n            zoomControl: true,\n            scaleControl: true,\n            scrollwheel: false,\n            styles: [\n            {\n                'featureType': 'landscape.natural.terrain',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'lightness': '-39'\n                    },\n                    {\n                        'color': '#b9d869'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road',\n                'elementType': 'geometry',\n                'stylers': [\n                    {\n                        'lightness': 100\n                    },\n                    {\n                        'visibility': 'simplified'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road',\n                'elementType': 'labels',\n                'stylers': [\n                    {\n                        'visibility': 'off'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.highway',\n                'elementType': 'geometry',\n                'stylers': [\n                    {\n                        'visibility': 'on'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.highway',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'visibility': 'on'\n                    },\n                    {\n                        'color': '#ffefab'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.highway',\n                'elementType': 'geometry.stroke',\n                'stylers': [\n                    {\n                        'visibility': 'off'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.highway.controlled_access',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'visibility': 'off'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.arterial',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'visibility': 'on'\n                    }\n                ]\n            },\n            {\n                'featureType': 'road.local',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'color': '#ffefab'\n                    },\n                    {\n                        'visibility': 'simplified'\n                    },\n                    {\n                        'weight': '0.59'\n                    }\n                ]\n            },\n            {\n                'featureType': 'water',\n                'elementType': 'geometry.fill',\n                'stylers': [\n                    {\n                        'weight': '1.66'\n                    },\n                    {\n                        'color': '#fdd4ce'\n                    }\n                ]\n            }\n        ]\n          });\n\n          new $window.google.maps.Marker({\n            position: center,\n            map: map,\n            animation: $window.google.maps.Animation.DROP\n          });\n        }\n      });\n\n    }\n  };\n}\n\n\n\n\n\n// googleMap.$inject = ['$window'];\n// function googleMap($window) {\n//   return {\n//     restrict: 'E',\n//     replace: true,\n//     template: '<div class='google-map'></div>',\n//     scope: {\n//       center: '='\n//     },\n//     link: function($scope, element) {\n//       $scope.$watch('center', (val) =>{\n//         console.log(val);\n//         if(val && val.lat && val.lng){\n//           const map = new $window.google.maps.Map(element[0], {\n//             center: $scope.center,\n//             zoom: 14\n//           });\n//\n//           new $window.google.maps.Marker({\n//             position: $scope.center,\n//             map,\n//             animation: $window.google.maps.Animation.DROP\n//           });\n//         }\n//       });\n//     }\n//   };\n// }\n","angular.module('finalProject')\n  .controller('MainController', MainController);\n\nMainController.$inject = ['$auth', '$state', '$rootScope', 'User'];\nfunction MainController($auth, $state, $rootScope, User){\n  const main = this;\n\n  main.isLoggedIn = $auth.isAuthenticated;\n\n\n\n  function logout(){\n    $auth.logout()\n      .then(()=>{\n        $state.go('home');\n      });\n  }\n\n  const protectedStates = ['usersEdit', 'vineyardsNew', 'vineyardsEdit'];\n// toParams gets the id from url, toState gets the name of the state\n  function secureState(e, toState){\n    main.message = null;\n    if(!$auth.isAuthenticated() && protectedStates.includes(toState.name)){\n      e.preventDefault();\n      $state.go('login');\n      main.message= 'you must be logged in to go there';\n    }\n    if ($auth.isAuthenticated()) {\n      main.userId = $auth.getPayload().id;\n      main.user = User.get({ id: main.userId});\n    }\n  }\n  $rootScope.$on('$stateChangeStart', secureState);\n\n  main.logout = logout;\n}\n","angular.module('finalProject')\n  .config(Router);\n\nRouter.$inject = ['$stateProvider', '$urlRouterProvider'];\nfunction Router($stateProvider, $urlRouterProvider) {\n  $stateProvider\n    .state('usersIndex', {\n      url: '/users',\n      templateUrl: '/templates/usersIndex.html',\n      controller: 'UsersIndexController as usersIndex'\n    })\n    .state('register', {\n      url: '/register',\n      templateUrl: '/templates/register.html',\n      controller: 'RegisterController as register'\n    })\n    .state('login', {\n      url: '/login',\n      templateUrl: '/templates/login.html',\n      controller: 'LoginController as login'\n    })\n    .state('usersShow', {\n      url: '/users/:id',\n      templateUrl: '/templates/usersShow.html',\n      controller: 'UsersShowController as usersShow'\n    })\n    .state('usersEdit', {\n      url: '/users/:id/edit',\n      templateUrl: '/templates/usersEdit.html',\n      controller: 'UsersEditController as usersEdit'\n    })\n    .state('vineyardsIndex', {\n      url: '/vineyards',\n      templateUrl: '/templates/vineyards.html',\n      controller: 'VineyardsController as vineyards'\n    })\n    .state('vineyardsNew', {\n      url: '/vineyards/new',\n      templateUrl: '/templates/vineyardsNew.html',\n      controller: 'VineyardsNewController as vineyardsNew'\n    })\n    .state('vineyardsShow', {\n      url: '/vineyards/:id',\n      templateUrl: '/templates/vineyardsShow.html',\n      controller: 'VineyardsShowController as vineyardsShow'\n    })\n    .state('vineyardsEdit', {\n      url: '/vineyards/:id/edit',\n      templateUrl: '/templates/vineyardsEdit.html',\n      controller: 'VineyardsEditController as vineyardsEdit'\n    })\n    .state('home', {\n      url: '/',\n      templateUrl: '/templates/home.html',\n      controller: 'LoginController as login'\n    })\n    // .state('commentsNew', {\n    //   url: '/comments/new',\n    //   templateUrl: '/templates/commentsNew.html',\n    //   controller: 'VineyardsShowController as vineyardsShow'\n    // })\n    ;\n\n  $urlRouterProvider.otherwise('/');\n}\n","angular.module('finalProject')\n  .controller('UsersIndexController', UsersIndexController)\n  .controller('UsersShowController', UsersShowController)\n  .controller('UsersEditController', UsersEditController);\n\nUsersIndexController.$inject = ['User'];\nfunction UsersIndexController(User) {\n  const usersIndex = this;\n\n  usersIndex.all = User.query();\n}\n\n//usersshow\n\nUsersShowController.$inject = ['User', '$state', '$auth'];\nfunction UsersShowController(User, $state, $auth){\n  const usersShow = this;\n\n  usersShow.user = User.get($state.params);\n\n  function isCurrentUser() {\n    return $auth.getPayload().id === parseFloat($state.params.id);\n  }\n   // get payload gives us current users id - user ID is IN TOKEN (BACKEND)\n  usersShow.isCurrentUser = isCurrentUser;\n  usersShow.user = User.get($state.params);\n\n  function deleteUser() {\n    usersShow.user.$remove(() => {\n      $state.go('usersIndex');\n    });\n  }\n  usersShow.delete = deleteUser;\n  usersShow.isLoggedIn = $auth.isAuthenticated;\n}\n\n//user edit and update\n\nUsersEditController.$inject = ['User', '$state'];\nfunction UsersEditController(User, $state) {\n  const usersEdit = this;\n\n  usersEdit.user = User.get($state.params);\n\n  function update() {\n    usersEdit.user.$update(() => {\n      $state.go('usersShow', $state.params);\n    });\n  }\n\n  this.update = update;\n\n}\n","angular.module('finalProject')\n  .factory('User', User);\n\nUser.$inject = ['$resource', 'API_URL'];\nfunction User($resource, API_URL) {\n  return new $resource(`${API_URL}/users/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('VineyardsController', VineyardsController);\n\nVineyardsController.$inject = ['Vineyard'];\n\nfunction VineyardsController(Vineyard) {\n  const vineyards = this;\n\n  vineyards.queryString = '';\n\n  function filter(vineyard){\n    const regex = new RegExp(vineyards.queryString, 'i');\n    return regex.test(vineyard.region) || regex.test(vineyard.vineyard_name);\n  }\n  vineyards.filter = filter;\n  vineyards.all = Vineyard.query();\n  // console.log(vineyards);\n\n  function getNumber(num) {\n    return new Array(num);\n  }\n  vineyards.getNumber = getNumber;\n}\n","angular.module('finalProject')\n  .factory('Vineyard', Vineyard);\n\nVineyard.$inject = ['$resource', 'API_URL'];\nfunction Vineyard($resource, API_URL) {\n  return new $resource(`${API_URL}/vineyards/:id`, { id: '@id' }, {\n    update: { method: 'PUT' }\n  });\n}\n","angular.module('finalProject')\n  .controller('VineyardsEditController', VineyardsEditController)\n  .controller('VineyardsNewController', VineyardsNewController);\n\nVineyardsNewController.$inject = ['Vineyard', '$state', '$auth'];\n\nfunction VineyardsNewController(Vineyard, $state, $auth) {\n\n  const vineyardsNew = this;\n  const currentUser = $auth.getPayload().id;\n  vineyardsNew.vineyard = {};\n\n  vineyardsNew.vineyard.user = currentUser;\n\n  function createVineyard() {\n\n    // get userId from payload\n    vineyardsNew.vineyard.user = $auth.getPayload().id;\n\n    Vineyard.save(vineyardsNew.vineyard, (vineyard) => {\n      $state.go('vineyardsShow', { id: vineyard.id });\n    });\n  }\n  vineyardsNew.createVineyard = createVineyard;\n}\n\n//edit\nVineyardsEditController.$inject = ['Vineyard', '$state'];\n\nfunction VineyardsEditController(vineyard, $state) {\n  const vineyardsEdit = this;\n  vineyardsEdit.vineyard = vineyard.get($state.params);\n\n  function update() {\n    vineyard.update({ id: vineyardsEdit.vineyard.id }, vineyardsEdit.vineyard, () => {\n      $state.go('vineyardsShow', $state.params);\n    });\n  }\n\n  this.update = update;\n}\n","angular.module('finalProject')\n  .controller('VineyardsShowController', VineyardsShowController);\n\nVineyardsShowController.$inject = ['Vineyard', '$state', 'Comment', '$auth', 'User'];\nfunction VineyardsShowController(Vineyard, $state, Comment, $auth, User){\n  const vineyardsShow = this;\n\n  // vineyardsShow.vineyard = Vineyard.get($state.params, (res) => {\n  Vineyard.get($state.params, (res) => {\n    // console.log(res);\n    vineyardsShow.vineyard = res;\n    vineyardsShow.vineyard.comments.forEach((comment) => {\n      // console.log(vineyardsShow.vineyard.comments);\n      User.get({id: comment.user_id}, (data) => {\n        // console.log(data);\n        comment.user = data;\n      });\n    });\n    console.log(vineyardsShow.vineyard);\n  });\n\n\n  function isCurrentUser(){\n    return $auth.getPayload().id === vineyardsShow.vineyard.user.id;\n  }\n  \n  vineyardsShow.isCurrentUser = isCurrentUser;\n  // vineyardsShow.vineyard = Vineyard.get($state.params);\n  // console.log(vineyardsShow.vineyard);\n  vineyardsShow.comment = {\n    vineyard_id: $state.params.id\n  };\n\n  // console.log(vineyardsShow.vineyard);\n\n  function addComment() {\n    Comment.save(vineyardsShow.comment, (data) => {\n      console.log(data);\n      vineyardsShow.vineyard.comments.push(data);\n      $state.reload();\n    });\n  }\n\n  vineyardsShow.addComment = addComment;\n//converts the number into an array of item and returns the count of that item\n  function getNumber(num) {\n    return new Array(num);\n  }\n\n  vineyardsShow.getNumber = getNumber;\n\n\n  function deleteVineyard() {\n    vineyardsShow.vineyard.$remove(() => {\n      $state.go('vineyardsIndex');\n    });\n  }\n  vineyardsShow.deleteVineyard = deleteVineyard;\n  vineyardsShow.isLoggedIn = $auth.isAuthenticated;\n\n\n\n}\n"]}