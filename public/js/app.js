"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function CommentsIndexController(e){var t=this;t.all=e.query()}function CommentsShowController(e,t,r){function o(){n.comment.$remove(function(){t.go("commentsIndex")})}var n=this;n.comment=e.get(t.params),n.delete=o,n.isLoggedIn=r.isAuthenticated}function CommentsEditController(e,t){function r(){o.comment.$update(function(){t.go("commentsShow",t.params)})}var o=this;o.comment=e.get(t.params),this.update=r}function Comment(e,t){return new e(t+"/comments/:id",{id:"@id"},{update:{method:"PUT"}})}function googleMap(e){return{restrict:"E",replace:!0,template:'<div class="google-map"></div>',scope:{center:"="},link:function(t,r){t.$watch("center",function(o){if(o&&o.lat&&o.lng){var n=new e.google.maps.Map(r[0],{center:t.center,zoom:12,disableDefaultUI:!0,zoomControl:!0,scaleControl:!0,scrollwheel:!1});new e.google.maps.Marker({position:t.center,map:n})}})}}}function MainController(e,t,r){function o(){e.logout().then(function(){t.go("usersIndex")})}function n(r,o){l.message=null,!e.isAuthenticated()&&i.includes(o.name)&&(r.preventDefault(),t.go("login"),l.message="you must be logged in to go there")}var l=this;l.isLoggedIn=e.isAuthenticated,l.userId=e.getPayload().id;var i=["usersEdit"];r.$on("$stateChangeStart",n),l.logout=o}function MapService(e){function t(t){return e({method:"GET",url:"/maps",params:{destination:t}}).then(function(e){return e.data},function(e){console.log(e)})}this.getCoords=t}function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("vineyardsIndex",{url:"/vineyards",templateUrl:"/templates/vineyards.html",controller:"VineyardsController as vineyards"}).state("vineyardsNew",{url:"/vineyards/new",templateUrl:"/templates/vineyardsNew.html",controller:"VineyardsNewController as vineyardsNew"}).state("vineyardsShow",{url:"/vineyards/:id",templateUrl:"/templates/vineyardsShow.html",controller:"VineyardsShowController as vineyardsShow"}).state("vineyardsEdit",{url:"/vineyards/:id/edit",templateUrl:"/templates/vineyardsEdit.html",controller:"VineyardsEditController as vineyardsEdit"}).state("home",{url:"/",templateUrl:"/templates/home.html",controller:"LoginController as login"}),t.otherwise("/")}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){return r.getPayload().id===parseFloat(t.params.id)}function n(){l.user.$remove(function(){t.go("usersIndex")})}var l=this;l.user=e.get(t.params),l.isCurrentUser=o,l.user=e.get(t.params),l.delete=n,l.isLoggedIn=r.isAuthenticated}function UsersEditController(e,t){function r(){o.user.$update(function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),this.update=r}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function Vineyard(e,t){return new e(t+"/vineyards/:id",{id:"@id"},{update:{method:"PUT"}})}function VineyardsController(e){var t=this;t.all=e.query(),console.log(t)}function VineyardsNewController(e,t,r){function o(){n.vineyard.user=r.getPayload().id,e.save(n.vineyard,function(e){t.go("vineyardsShow",{id:e.id})})}var n=this,l=r.getPayload().id;n.vineyard={},n.vineyard.user=l,n.createVineyard=o}function VineyardsEditController(e,t){function r(){e.update({id:o.vineyard.id},o.vineyard,function(){t.go("vineyardsShow",t.params)})}var o=this;o.vineyard=e.get(t.params),this.update=r}function VineyardsShowController(e,t,r,o,n){function l(){return console.log("isCurrentUser?",o.getPayload().id===parseFloat(t.params.id)),o.getPayload().id===parseFloat(t.params.id)}function i(){r.save(s.comment,function(e){console.log(e),s.vineyard.comments.push(e)})}function a(){s.vineyard.$remove(function(){t.go("vineyardsIndex")})}var s=this;s.vineyard=e.get(t.params),s.isCurrentUser=l,s.vineyard=e.get(t.params),s.comment={vineyard_id:t.params.id},s.addComment=i,s.deleteVineyard=a,s.isLoggedIn=o.isAuthenticated,n.getCoords(s.vineyard.postcode).then(function(e){s.center=e},function(e){console.log(e)})}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").controller("CommentsIndexController",CommentsIndexController).controller("CommentsShowController",CommentsShowController).controller("CommentsEditController",CommentsEditController),CommentsIndexController.$inject=["Comment"],CommentsShowController.$inject=["Comment","$state","$auth"],CommentsEditController.$inject=["Comment","$state"],angular.module("finalProject").factory("Comment",Comment),Comment.$inject=["$resource","API_URL"],angular.module("finalProject").directive("googleMap",googleMap),googleMap.$inject=["$window"],angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").service("MapService",MapService),MapService.$inject=["$http"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").factory("Vineyard",Vineyard),Vineyard.$inject=["$resource","API_URL"],angular.module("finalProject").controller("VineyardsController",VineyardsController),VineyardsController.$inject=["Vineyard"],angular.module("finalProject").controller("VineyardsEditController",VineyardsEditController).controller("VineyardsNewController",VineyardsNewController),VineyardsNewController.$inject=["Vineyard","$state","$auth"],VineyardsEditController.$inject=["Vineyard","$state"],angular.module("finalProject").controller("VineyardsShowController",VineyardsShowController),VineyardsShowController.$inject=["Vineyard","$state","Comment","$auth","MapService"];
//# sourceMappingURL=app.js.map
